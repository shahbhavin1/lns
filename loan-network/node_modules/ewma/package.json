{
  "_args": [
    [
      {
        "raw": "ewma@^2.0.1",
        "scope": null,
        "escapedName": "ewma",
        "name": "ewma",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "/Users/bhavinshah/hyper2/loan-network/node_modules/restify"
    ]
  ],
  "_from": "ewma@>=2.0.1 <3.0.0",
  "_id": "ewma@2.0.1",
  "_inCache": true,
  "_location": "/ewma",
  "_nodeVersion": "6.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ewma-2.0.1.tgz_1504904790676_0.3281108944211155"
  },
  "_npmUser": {
    "name": "retrohacker",
    "email": "william.jblankenship@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ewma@^2.0.1",
    "scope": null,
    "escapedName": "ewma",
    "name": "ewma",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/restify"
  ],
  "_resolved": "https://registry.npmjs.org/ewma/-/ewma-2.0.1.tgz",
  "_shasum": "9876c1c491ac5733c8666001a3961a04c97cf1e8",
  "_shrinkwrap": null,
  "_spec": "ewma@^2.0.1",
  "_where": "/Users/bhavinshah/hyper2/loan-network/node_modules/restify",
  "author": {
    "name": "Steve Gury"
  },
  "bugs": {
    "url": "https://github.com/ReactiveSocket/ewma/issues"
  },
  "dependencies": {
    "assert-plus": "^1.0.0"
  },
  "description": "Exponentially Weighted Moving Average",
  "devDependencies": {
    "eslint": "^4.5.0",
    "jscs": "^3.0.7",
    "nyc": "^11.2.0",
    "tape": "^4.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MYYK17A76cuuyvkR7MnqLW4iFYPEi5Isl2qb8rXiWpLiwFS9dxW/rncuNnjjgSENuVqZQkIuR4+DChVL4g1lnw==",
    "shasum": "9876c1c491ac5733c8666001a3961a04c97cf1e8",
    "tarball": "https://registry.npmjs.org/ewma/-/ewma-2.0.1.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "60d3a4200fc51b491acccd61b0d666a345953e4f",
  "homepage": "https://github.com/ReactiveSocket/ewma#readme",
  "keywords": [
    "JS",
    "math",
    "statistics"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "retrohacker",
      "email": "william.jblankenship@gmail.com"
    }
  ],
  "name": "ewma",
  "optionalDependencies": {},
  "readme": "[![NPM Version](https://img.shields.io/npm/v/ewma.svg)](https://npmjs.org/package/ewma)\n[![Build Status](https://travis-ci.org/ReactiveSocket/ewma.svg?branch=master)](https://travis-ci.org/ReactiveSocket/ewma)\n\n# EWMA\n\nAn exponential weighted moving average for Node.js and the browser!\n\n```bash\nnpm install -g ewma\n```\n\n## Usage\n\nCompute the exponential weighted moving average of a series of values.  The\ntime at which you insert the value into `Ewma` is used to compute a weight\n(recent points are weighted higher).  The parameter for defining the\nconvergence speed (like most decay process) is the half-life.\n\ne.g. with a half-life of 10 unit, if you insert 100 at t=0 and 200 at t=10 the\newma will be equal to (200 - 100)/2 = 150 (half of the distance between the new\nand the old value).\n\n### `var ewma = new EWMA(halfLifeMs, initialValue, clock)`\n\n* `halfLifeMs` - `{Number}` parameter representing the speed of convergence\n* `initialValue` - `{Number}` initial value\n* `clock` - Optional `{Number}` clock object used to read time, must support\n            `Date.now()` style method. Defaults to `Date`.\n\nreturns an object computing the ewma average\n\n### `ewma.insert(x)`\n\n* `x` - The next value, `ewma` will automatically compute the EWMA based on the\n        clock difference between this value and the last time `insert` was\n        called\n\n### `ewma.reset(x)`\n\n* `x` - Set the EWMA to exactly `x`.\n\n### `ewma.value()`\n\nReturns the current EWMA value.\n\n## Examples\n\nThese are generated using a 500ms interval with a half life indicated in the\nkey. For the source code, or to reproduce yourself, check the\n[Example](./example) directory.\n\n![](./example/abs.png)\n![](./example/sin.png)\n![](./example/sawtooth.png)\n\n## Contributions\nContributions welcome, please ensure `make` runs clean.\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ReactiveSocket/ewma.git"
  },
  "scripts": {
    "all": "make"
  },
  "version": "2.0.1"
}
